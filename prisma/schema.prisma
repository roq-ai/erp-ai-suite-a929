generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model data_privacy_assessment {
  id                 String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  assessment_date    DateTime     @db.Timestamp(6)
  assessment_details String
  user_id            String       @db.Uuid
  organization_id    String       @db.Uuid
  created_at         DateTime     @default(now()) @db.Timestamp(6)
  updated_at         DateTime     @default(now()) @db.Timestamp(6)
  organization       organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user               user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model log_analysis {
  id              String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  log_date        DateTime     @db.Timestamp(6)
  log_details     String
  user_id         String       @db.Uuid
  organization_id String       @db.Uuid
  created_at      DateTime     @default(now()) @db.Timestamp(6)
  updated_at      DateTime     @default(now()) @db.Timestamp(6)
  organization    organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user            user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model organization {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description              String?                    @db.VarChar(255)
  name                     String                     @db.VarChar(255)
  created_at               DateTime                   @default(now()) @db.Timestamp(6)
  updated_at               DateTime                   @default(now()) @db.Timestamp(6)
  user_id                  String                     @db.Uuid
  tenant_id                String                     @db.VarChar(255)
  data_privacy_assessment  data_privacy_assessment[]
  log_analysis             log_analysis[]
  user                     user                       @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  performance_optimization performance_optimization[]
  security_assessment      security_assessment[]
}

model performance_optimization {
  id                   String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  optimization_date    DateTime     @db.Timestamp(6)
  optimization_details String
  user_id              String       @db.Uuid
  organization_id      String       @db.Uuid
  created_at           DateTime     @default(now()) @db.Timestamp(6)
  updated_at           DateTime     @default(now()) @db.Timestamp(6)
  organization         organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user                 user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model security_assessment {
  id                 String       @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  assessment_date    DateTime     @db.Timestamp(6)
  assessment_details String
  user_id            String       @db.Uuid
  organization_id    String       @db.Uuid
  created_at         DateTime     @default(now()) @db.Timestamp(6)
  updated_at         DateTime     @default(now()) @db.Timestamp(6)
  organization       organization @relation(fields: [organization_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  user               user         @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
}

model user {
  id                       String                     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                    String                     @unique @db.VarChar(255)
  firstName                String?                    @db.VarChar(255)
  lastName                 String?                    @db.VarChar(255)
  roq_user_id              String                     @db.VarChar(255)
  tenant_id                String                     @db.VarChar(255)
  created_at               DateTime                   @default(now()) @db.Timestamp(6)
  updated_at               DateTime                   @default(now()) @db.Timestamp(6)
  data_privacy_assessment  data_privacy_assessment[]
  log_analysis             log_analysis[]
  organization             organization[]
  performance_optimization performance_optimization[]
  security_assessment      security_assessment[]
}
